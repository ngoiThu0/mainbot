const { PermissionsBitField, ApplicationCommandOptionType, ActionRowBuilder, BaseSelectMenuBuilder, StringSelectMenuBuilder, StringSelectMenuOptionBuilder } = require("discord.js");
const {erroEmbed, successEmbed} = require("../../lib/EmbedMessages");
const Categories = require("../../data/collections/categories");
const Items = require("../../data/collections/items");
const selectCategory = require("../../handleInteraction/selectmenu/selectCategory");


module.exports = {
    name: "shop",
    alias: ['sh'],
    description : "Hi·ªÉn th·ªã c√°c item c√≥ th·ªÉ mua ƒë∆∞·ª£c.",
    
    permissionsRequired: [PermissionsBitField.Flags.SendMessages],
    botPermissions: [PermissionsBitField.Flags.SendMessages],


    execute: async (bot, object, options) => {
        let interaction = object.interaction || object.message;
        // successEmbed.setDescription("ƒêang b·∫£o tr√¨...");
        // interaction.reply({embeds: [successEmbed]});
        
        const select = new StringSelectMenuBuilder()
        .setCustomId(selectCategory.customId)
        .setPlaceholder(selectCategory.description);

        selectCategory.options.forEach(doc => {
            select.addOptions(
                new StringSelectMenuOptionBuilder()
                    .setLabel(doc.name.toUpperCase())
                    .setEmoji(doc.emoji || 'ü§ë')
                    .setDescription(doc.description)
                    .setValue(doc.name)
            )
        })
        const row = new ActionRowBuilder()
        .addComponents(select);

        successEmbed.setDescription(`Ch√†o m·ª´ng ƒë·∫øn v·ªõi c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i! üõçÔ∏è

T·∫°i c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i, b·∫°n s·∫Ω c√≥ c∆° h·ªôi tr·∫£i nghi·ªám nh·ªØng v·∫≠t ph·∫©m h·∫•p d·∫´n v√† ƒë·ªôc ƒë√°o ƒë·ªÉ n√¢ng cao tr·∫£i nghi·ªám c·ªßa b·∫°n trong server Discord. D∆∞·ªõi ƒë√¢y l√† m·ªôt s·ªë lo·∫°i v·∫≠t ph·∫©m m√† ch√∫ng t√¥i cung c·∫•p:

**1. Item Buff**C√°c v·∫≠t ph·∫©m n√†y gi√∫p b·∫°n nh·∫≠n ƒë∆∞·ª£c m·ªôt buff ƒë·∫∑c bi·ªát, t·ª´ vi·ªác tƒÉng c∆∞·ªùng kinh nghi·ªám ƒë·∫øn vi·ªác tƒÉng t·ªâ l·ªá r·ªõt item. V·ªõi nh·ªØng buff n√†y, b·∫°n c√≥ th·ªÉ tr·ªü n√™n m·∫°nh m·∫Ω h∆°n v√† ti·∫øn xa h∆°n trong h√†nh tr√¨nh c·ªßa m√¨nh.

**2. Role ƒê·∫∑c Bi·ªát**N√¢ng cao v·ªã th·∫ø c·ªßa b·∫°n trong c·ªông ƒë·ªìng v·ªõi c√°c role ƒë·ªôc quy·ªÅn ch·ªâ c√≥ s·∫µn t·∫°i c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i. Nh·∫≠n nh·ªØng quy·ªÅn l·ª£i ƒë·∫∑c bi·ªát v√† danh hi·ªáu cao qu√Ω khi b·∫°n s·ªü h·ªØu c√°c role n√†y.

**3. C√°c V·∫≠t Ph·∫©m Kh√°c**B√™n c·∫°nh ƒë√≥, ch√∫ng t√¥i c√≤n cung c·∫•p m·ªôt lo·∫°t c√°c v·∫≠t ph·∫©m kh√°c nh∆∞ sticker, emoji ƒë·ªôc ƒë√°o v√† nhi·ªÅu h∆°n n·ªØa ƒë·ªÉ b·∫°n c√≥ th·ªÉ t√πy ch·ªânh v√† l√†m m·ªõi server c·ªßa m√¨nh.

Kh√°m ph√° c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i ngay h√¥m nay v√† tr·∫£i nghi·ªám s·ª± phong ph√∫ v√† ƒëa d·∫°ng c·ªßa c√°c v·∫≠t ph·∫©m ƒë·ªôc ƒë√°o m√† ch√∫ng t√¥i mang l·∫°i! üéâ`)

        const reply = await interaction.reply({embeds: [successEmbed], components: [row]});

        reply.create

//         await Items.find({guildId: interaction.guildId}).populate({
//             path: 'guildId',
//             match: {guildId: interaction.guildId}
//         })
//         .exec()
//         .then(docs => {
//             // console.log("ƒë√¢y l√† doc", docs);
//             if(docs.length){
//                 console.log("ƒë√¢y l√† doc", docs);
//                 docs.forEach(doc => {
//                     select.addOptions(
//                         new StringSelectMenuOptionBuilder()
//                             .setLabel(doc.itemName)
//                             .setEmoji(doc.emoji || 'ü§ë')
//                             .setDescription(doc.description)
//                             .setValue(doc.itemName)
//                     )
//                 })
//                 const row = new ActionRowBuilder()
//                 .addComponents(select);

//                 successEmbed.setDescription(`Ch√†o m·ª´ng ƒë·∫øn v·ªõi c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i! üõçÔ∏è

// T·∫°i c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i, b·∫°n s·∫Ω c√≥ c∆° h·ªôi tr·∫£i nghi·ªám nh·ªØng v·∫≠t ph·∫©m h·∫•p d·∫´n v√† ƒë·ªôc ƒë√°o ƒë·ªÉ n√¢ng cao tr·∫£i nghi·ªám c·ªßa b·∫°n trong server Discord. D∆∞·ªõi ƒë√¢y l√† m·ªôt s·ªë lo·∫°i v·∫≠t ph·∫©m m√† ch√∫ng t√¥i cung c·∫•p:

// **1. Item Buff**C√°c v·∫≠t ph·∫©m n√†y gi√∫p b·∫°n nh·∫≠n ƒë∆∞·ª£c m·ªôt buff ƒë·∫∑c bi·ªát, t·ª´ vi·ªác tƒÉng c∆∞·ªùng kinh nghi·ªám ƒë·∫øn vi·ªác tƒÉng t·ªâ l·ªá r·ªõt item. V·ªõi nh·ªØng buff n√†y, b·∫°n c√≥ th·ªÉ tr·ªü n√™n m·∫°nh m·∫Ω h∆°n v√† ti·∫øn xa h∆°n trong h√†nh tr√¨nh c·ªßa m√¨nh.

// **2. Role ƒê·∫∑c Bi·ªát**N√¢ng cao v·ªã th·∫ø c·ªßa b·∫°n trong c·ªông ƒë·ªìng v·ªõi c√°c role ƒë·ªôc quy·ªÅn ch·ªâ c√≥ s·∫µn t·∫°i c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i. Nh·∫≠n nh·ªØng quy·ªÅn l·ª£i ƒë·∫∑c bi·ªát v√† danh hi·ªáu cao qu√Ω khi b·∫°n s·ªü h·ªØu c√°c role n√†y.

// **3. C√°c V·∫≠t Ph·∫©m Kh√°c**B√™n c·∫°nh ƒë√≥, ch√∫ng t√¥i c√≤n cung c·∫•p m·ªôt lo·∫°t c√°c v·∫≠t ph·∫©m kh√°c nh∆∞ sticker, emoji ƒë·ªôc ƒë√°o v√† nhi·ªÅu h∆°n n·ªØa ƒë·ªÉ b·∫°n c√≥ th·ªÉ t√πy ch·ªânh v√† l√†m m·ªõi server c·ªßa m√¨nh.

// Kh√°m ph√° c·ª≠a h√†ng c·ªßa ch√∫ng t√¥i ngay h√¥m nay v√† tr·∫£i nghi·ªám s·ª± phong ph√∫ v√† ƒëa d·∫°ng c·ªßa c√°c v·∫≠t ph·∫©m ƒë·ªôc ƒë√°o m√† ch√∫ng t√¥i mang l·∫°i! üéâ`)

//                 interaction.reply({embeds: [successEmbed], components: [row]});
//             }
//         })
        // .catch(err => {
        //     console.log(err);
        // });

        // .addOptions(
        //     new StringSelectMenuOptionBuilder()
        //         .setLabel('Bulbasaur')
        //         .setDescription('The dual-type Grass/Poison Seed Pok√©mon.')
        //         .setValue('bulbasaur'),
        //     new StringSelectMenuOptionBuilder()
        //         .setLabel('Charmander')
        //         .setDescription('The Fire-type Lizard Pok√©mon.')
        //         .setValue('charmander'),
        //     new StringSelectMenuOptionBuilder()
        //         .setLabel('Squirtle')
        //         .setDescription('The Water-type Tiny Turtle Pok√©mon.')
        //         .setValue('squirtle'),
        // );

    }
}